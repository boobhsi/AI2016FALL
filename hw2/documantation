There are 6 features to evaluate the current state: feature_for_food, feature_for_food_count, feature_for_escaping, feature_for_cap(capsule), feature_for_chasing_ghost, and eventually, the score of current state.

Feature_for_food is obtained from reciprocal of the distance from the pacman to the nearest food. To avoid the possibility of stuck in symmetic food mapping, the pacman will tend to move upward and rihgtward since the feature extracting formula is 1.1 / distance(food), while the opposite is 1.0 / distance(food).

Feature_for_food_count is obtained from the formulation 1.0 / (1.3 ** len(list_of_food), which encourage pacman to eat food rather than stop as result of the change of the nearest food.

Feature_for_escaping is obtained from the reciporal of the distance from the pacman to the nearest ghost, which is in the range of 5 manhattan distace from the pacman and not scared.                                                                 
      
Feature_for_cap is obtained from the sum of total scared timers multiplied by the reciprocal of the distance between pacman and the nearest food and between foods which are not scared. It will get maximum when all ghosts are near the pacman and have largest scared time. This situation is the best for pacman to eat ghost.

Feature_for_chasing_ghost is obtained from reciprocal of the distance from pacman to the nearest ghost if the nearest one is eatable.

All features are multiplied by weights which are tuned by experiment. Finally we sum 5 * current score to get as higher score as possible.
